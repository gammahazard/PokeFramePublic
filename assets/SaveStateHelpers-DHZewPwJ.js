const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/SimplePlay-B60mkpue.js","assets/index-BBtjCGTq.js","assets/index-ByT9wwdi.css","assets/romsList-BhNhH5pS.js","assets/8-instr_effect-CUHNsoOc.js"])))=>i.map(i=>d[i]);
import{_ as y}from"./index-BBtjCGTq.js";function P(t){t.style.display="block",t.style.visibility="visible",t.style.opacity="1";const e=t.getContext("2d");e&&(e.clearRect(0,0,t.width,t.height),e.fillStyle="#000055",e.fillRect(0,0,t.width,t.height),e.fillStyle="#fff",e.font="10px monospace",e.textAlign="center",e.fillText("LOADING SAVED GAME...",t.width/2,t.height/2))}function _(t,e="before"){try{const i=t.get_canvas_data_pointer();if(console.log(`Canvas data pointer ${e} load:`,i),!i||i<=0){console.warn(`Canvas data pointer is invalid ${e} save state load, attempting to fix...`);const o=e==="before"?10:5;for(let r=0;r<o;r++){t.run_frame();const n=t.get_canvas_data_pointer();if(n&&n>0){console.log(`Canvas data pointer fixed after ${r+1} frames:`,n);break}}}}catch(i){console.warn(`Error checking canvas data pointer ${e} load:`,i)}}async function x(t,e){console.log("Running progressive frame sequences for Pokemon stabilization...");for(let o=0;o<10;o++)t.run_frame();const i=e(!1);console.log("First render after save state load result:",i),await new Promise(o=>setTimeout(o,20));for(let o=0;o<6;o++){for(let r=0;r<5;r++)t.run_frame();e(!1),await new Promise(r=>setTimeout(r,10))}for(let o=0;o<6;o++){for(let r=0;r<10;r++)t.run_frame();e(!1),await new Promise(r=>setTimeout(r,Math.max(5,20-o*3)))}for(let o=0;o<20;o++)t.run_frame()}function v(t,e){try{if(e){t.on_key_down(e.JsKeys.Select),t.run_frame(),t.on_key_up(e.JsKeys.Select);for(let i=0;i<5;i++)t.run_frame()}}catch(i){console.log("Input reset error:",i)}}function A(t,e){return i=>{for(let o=0;o<i;o++)t.run_frame();i>0&&e(!1)}}function b(t,e,i,o){return new Promise(r=>{let n=0;const s=()=>{for(let c=0;c<10;c++)t.run_frame();e(!1),n+=10,i(Math.min(30,n*.3)),o(`Pre-warming emulator: ${Math.min(100,n)}%
Preparing for map fixes...`),n<100?setTimeout(s,50):r()};setTimeout(s,100)})}async function T(t,e,i,o,r,n,s,c){console.log("Applying automatic Pokemon map fix with stable timing..."),i(!0),o(1),r(`Starting automatic map fix...
Preparing emulator for fixes.`);const m=A(t,e);await b(t,e,o,r);try{const{applyAllMapFixes:p}=await y(async()=>{const{applyAllMapFixes:a}=await import("./enhancedPokemonMapFix-BKxRcP10.js");return{applyAllMapFixes:a}},[]);await new Promise(a=>{let l=30;const u=100,f=3e3,w=Date.now(),g=()=>{const h=Date.now()-w,d=Math.min(h/f,1);l=30+70*d,o(Math.round(l)),d<.5?r(`Loading map fix utilities...
Applying Pokemon-specific fixes...`):d<.9?r(`Applying Pokemon map fixes...
Optimizing graphics rendering...`):r(`Map fixes applied successfully!
Finalizing...`),d<1?setTimeout(g,50):(p(t,m,()=>{}),n(!0),setTimeout(()=>{i(!1),setTimeout(()=>{s(!0)},300)},500),a())};g()})}catch(p){console.warn("Error importing enhanced map fixes:",p),i(!1);try{const{applyComprehensiveFix:a}=await y(async()=>{const{applyComprehensiveFix:l}=await import("./SimplePlay-B60mkpue.js").then(u=>u.p);return{applyComprehensiveFix:l}},__vite__mapDeps([0,1,2,3,4]));a(t,m),setTimeout(()=>{s(!0)},300)}catch(a){console.warn("Basic fix error:",a)}}}async function k(t){const{emulator:e,canvas:i,saveData:o,wasmModule:r,renderGameFrame:n,setShowMapFixLoader:s,setMapFixProgress:c,setMapFixDetailedStatus:m,setMapFixesApplied:p,setShowConfirmationModal:a,setConfirmationModalDismissed:l}=t;if(!e||!i)return!1;try{P(i),console.log("Attempting to load save state, size:",o.length),_(e,"before");try{for(let f=0;f<5;f++)e.run_frame()}catch(f){console.log("Pre-load frame running error:",f)}return e.load_state(o)?(console.log("Save state loaded successfully"),i.style.display="block",i.style.visibility="visible",i.style.opacity="1",_(e,"after"),await x(e,n),v(e,r),n(!1),console.log("Save state loaded successfully - emulator ready"),await T(e,n,s,c,m,p,a,l),!0):(console.error("Failed to load save state"),!1)}catch(u){return console.warn("Error in apply loaded save state:",u),!1}}export{T as applyAutomaticMapFixes,k as applySaveStateWithOptimizations,A as createFrameRunner,P as prepareCanvasForLoading,b as prepareEmulatorForMapFix,v as resetInputState,x as runProgressiveFrameSequences,_ as validateAndFixCanvasPointer};
